// Code generated by go generate; DO NOT EDIT.
// This file was generated by robots at
// 2018-02-09T15:03:18&#43;03:00

package model

func MapWallet(a []Wallet, f func(Wallet) Wallet) []Wallet {
	slice := []Wallet{}
	for i := range a {
		slice = append(slice, f(a[i]))
	}
	return slice
}

func EachWallet(a []Wallet, f func(*Wallet)) {
	for i := range a {
		f(&a[i])
	}
}

func FilterWallet(a []Wallet, f func(Wallet) bool) []Wallet {
	slice := []Wallet{}
	for i := range a {
		if f(a[i]) {
			slice = append(slice, a[i])
		}
	}
	return slice
}

func SomeWallet(a []Wallet, f func(Wallet) bool) bool {
	for i := range a {
		if f(a[i]) {
			return true
		}
	}
	return false
}

func EveryWallet(a []Wallet, f func(Wallet) bool) bool {
	for i := range a {
		if !f(a[i]) {
			return false
		}
	}
	return true
}
